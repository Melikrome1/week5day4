---Thursday Questions

---1. Create a Stored Procedure that will insert a new film into the film table with the following arguments:
-- title, description, release_year, language_id, rental_duration, rental_rate, length, replace_cost, rating

SELECT *
FROM film;
---Set the PARAMETER p_  then put the arguments
CREATE OR REPLACE PROCEDURE insert_film(
    p_title VARCHAR(255),
    p_description TEXT,
    p_release_year INTEGER,
    p_language_id INTEGER,
    p_rental_duration INTEGER,
    p_rental_rate NUMERIC(5, 2),
    p_length INTEGER,
    p_replace_cost NUMERIC(5, 2),
    p_rating VARCHAR(10)
)
AS
$$
BEGIN
    INSERT INTO film (title, description, release_year, language_id, rental_duration, rental_rate, length, replacement_cost, rating)
    VALUES (p_title, p_description, p_release_year, p_language_id, p_rental_duration, p_rental_rate, p_length, p_replace_cost, p_rating::mpaa_rating);
END;
$$
LANGUAGE plpgsql;

---SELECT *
---FROM LANGUAGE;

CALL insert_film('Vampire Diaries', 'A Vampire Saga', 2023, 1, 7, 4.99, 220, 9.99, 'PG');





---2. Create a Stored Function that will take in a category_id and return the number of films in that category

SELECT *
FROM category ; 

CREATE OR REPLACE PROCEDURE category_id(INTEGER)
RETURNS INTEGER
AS
$$
DECLARE
    film_id INTEGER;
BEGIN
    SELECT COUNT(*) INTO film_id
    FROM film_category
    WHERE category_id = get_film_by_category.category_id;
    
    RETURN film_id INTEGER;
END;
$$
LANGUAGE plpgsql;


--This was very confusing, I couldn't quite figure it out



















